
def foo(b)
    local.c = false

    if local.b
        global.test = "was true"
        return "val is true"
    else
        global.test = "was false"
    end

    local.fac = fac(5)
    local.test = _eq(local.fac, 120)
    if local.test
        global.data3 = true
    else
        global.data4 = global.test
    end

    return "val is false"
end

def fac(num)
    local.isOne = _eq(local.num, 1)
    if local.isOne
        return local.num
    end

    local.aux = _sub(local.num, 1)
    local.recRes = fac(local.aux)
    local.res = _mul(local.num, local.recRes)
    return local.res
end

def inMain(msg)
    local.test = _eq(local.msg.type, "type1")
    if local.test
        global.type1data = local.msg.type
    else
        local.test = _eq(local.msg.type, "type2")
        if local.test
            global.type2data = local.msg.type
        end
    end

    return local.msg.type
end

def main(msg)
    local.msg2.type = local.msg
    local.res = inMain(local.msg2)

    local.test1 = _eq(local.res, "type1")
    local.test2 = _eq(local.res, "type2")

    local.test3aux = _eq(local.test1, local.test2)
    local.test3aux2 = _neg(local.test1)
    local.test3 = _and(local.test3aux, local.test3aux2)

    if local.test1
        global.res.wasType1 = true
    else if local.test2
        global.res.wasType2 = true
    else if local.test3
        global.res.wasUnknown = true
    end

    return global.res
end